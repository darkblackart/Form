import { SourceFile, MutantResult } from 'stryker-api/report';
import HandlebarsModel from './HandlebarsModel';
import SourceFileTreeLeaf from './SourceFileTreeLeaf';
/**
 * Represents a node (directory) which can contain source files which in turn include mutant results
 */
export default class SourceFileTreeNode {
    name: string;
    leafs: SourceFileTreeLeaf[];
    children: SourceFileTreeNode[];
    model: HandlebarsModel;
    urlPrefix: string;
    /**
     * @param name - The name of the directory which this node represents
     */
    constructor(name: string);
    /**
     * Adds a source file to this node or one of its children
     * @param file - The file to add
     * @param pathComponents - The path components of the file. Leave empty, should only be used for recursive calls.
     */
    addSourceFile(file: SourceFile, pathComponents?: string[]): void;
    /**
     * Adds a mutant result to the correct leaf in this node or one of the children
     * Warning: All source files need to be added before mutant results should be added
     * @param result - the mutant result to add
     * @param pathComponents - The path components of the result. Leave empty, should only be used for recursive calls.
     */
    addMutantResult(result: MutantResult, pathComponents?: string[]): void;
    normalizeNames(): void;
    calculateModel(urlPrefix: string): void;
    writeReportNodeRecursive(directory: string): void;
    toString(offset?: number): string;
    private static mutantStatusToString(status);
}
