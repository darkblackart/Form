/**
 * Checks if a file or folder exists.
 * @function
 * @param path - The path to the file or folder.
 * @returns True if the file exists.
 */
export declare function fileOrFolderExistsSync(path: string): boolean;
export declare function fileOrFolderExists(path: string): Promise<boolean>;
/**
 * Reads a file.
 * @function
 * @param filename - The name of the file.
 * @returns The content of the file.
 */
export declare function readFile(filename: string): string;
/**
   * Normalizes the paths of a list of filenames.
   * @param files - The list of filenames which have to be normalized.
   */
export declare function normalize(files: string[]): void;
export declare function glob(expression: string): Promise<string[]>;
export declare function readdir(path: string): Promise<string[]>;
/**
 * Deletes a directory recursively
 */
export declare function deleteDir(dirToDelete: string): Promise<void>;
export declare function cleanFolder(folderName: string): Promise<void>;
export declare function writeFile(fileName: string, content: string): Promise<void>;
export declare function mkdirRecursive(folderName: string): void;
/**
 * Wrapper around the 'require' function (for testability)
 */
export declare function importModule(moduleName: string): void;
export declare function isOnlineFile(path: string): boolean;
