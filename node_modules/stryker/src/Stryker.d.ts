import { Config } from 'stryker-api/config';
import { StrykerOptions } from 'stryker-api/core';
import { MutantResult } from 'stryker-api/report';
export default class Stryker {
    config: Config;
    private timer;
    private reporter;
    private testFramework;
    private coverageInstrumenter;
    /**
     * The Stryker mutation tester.
     * @constructor
     * @param {String[]} mutateFilePatterns - A comma seperated list of globbing expression used for selecting the files that should be mutated
     * @param {String[]} allFilePatterns - A comma seperated list of globbing expression used for selecting all files needed to run the tests. These include library files, test files and files to mutate, but should NOT include test framework files (for example jasmine)
     * @param {Object} [options] - Optional options.
     */
    constructor(options: StrykerOptions);
    /**
     * Runs mutation testing. This may take a while.
     * @function
     */
    runMutationTest(): Promise<MutantResult[]>;
    private filterOutFailedTests(runResult);
    private loadPlugins();
    private verify();
    private initialTestRun(inputFiles);
    private generateAndRunMutations(inputFiles, initialRunResult, sandboxCoordinator);
    private generateMutants(inputFiles, runResult);
    private wrapUpReporter();
    private applyConfigWriters();
    private freezeConfig();
    private logInitialTestRunSucceeded(tests);
    private logDone();
    private setGlobalLogLevel();
    private logFailedTestsInInitialRun(failedTests);
    private logErrorredInitialRun(runResult);
    private logTimeoutInitialRun(runResult);
}
